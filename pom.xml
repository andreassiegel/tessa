<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2023 Andreas Siegel (mail@andreassiegel.de)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.andreassiegel</groupId>
  <artifactId>tessa-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Tessa Parent</name>
  <description>Parent for the Tessa test documentation project</description>

  <inceptionYear>2023</inceptionYear>
  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <modules>
    <module>tessa-test-annotations</module>
    <module>tessa-maven-plugin</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/andreassiegel/tessa.git</connection>
    <developerConnection>scm:git:https://github.com/andreassiegel/tessa.git</developerConnection>
    <url>https://github.com/andreassiegel/tessa</url>
  </scm>

  <properties>
    <maven.build.timestamp.format>dd-MM-yyyy_HH-mm-ss-SSSS</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>17</java.version>

    <!-- Provided dependencies -->
    <lombok.version>1.18.26</lombok.version>

    <!-- Test dependencies -->
    <junit-jupiter.version>5.9.3</junit-jupiter.version>
    <mockito.version>5.3.1</mockito.version>

    <!-- Git Flow for Release Automation -->
    <gitflow-maven-plugin.version>1.19.0</gitflow-maven-plugin.version>
    <gitflow-maven-plugin.preReleaseGoals></gitflow-maven-plugin.preReleaseGoals>
    <gitflow-maven-plugin.postReleaseGoals></gitflow-maven-plugin.postReleaseGoals>
    <gitflow-maven-plugin.installProject>false</gitflow-maven-plugin.installProject>
    <gitflow-maven-plugin.pushRemote>true</gitflow-maven-plugin.pushRemote>
    <gitflow-maven-plugin.productionBranch>main</gitflow-maven-plugin.productionBranch>
    <gitflow-maven-plugin.developmentBranch>develop</gitflow-maven-plugin.developmentBranch>

    <!-- Copyright Headers -->
    <mycila-license-maven-plugin.version>4.2</mycila-license-maven-plugin.version>
    <my-copyright-resources.version>1.0.0</my-copyright-resources.version>

    <!-- Maven Compiler with Error Prone -->
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <error-prone.version>2.18.0</error-prone.version>

    <!-- Misc Plugin Versions -->
    <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
    <sortpom-maven-plugin.version>3.2.1</sortpom-maven-plugin.version>
    <fmt-maven-plugin.version>2.19</fmt-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Provided dependencies -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- General Helpers -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
          <executions>
            <!-- Define the year for copyright headers -->
            <execution>
              <id>timestamp-property</id>
              <goals>
                <goal>timestamp-property</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <name>copyright.year</name>
                <pattern>yyyy</pattern>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Git Flow for Release Automation -->
        <plugin>
          <groupId>com.amashchenko.maven.plugin</groupId>
          <artifactId>gitflow-maven-plugin</artifactId>
          <version>${gitflow-maven-plugin.version}</version>
          <configuration>
            <installProject>${gitflow-maven-plugin.installProject}</installProject>
            <verbose>true</verbose>
            <gitFlowConfig>
              <productionBranch>${gitflow-maven-plugin.productionBranch}</productionBranch>
              <developmentBranch>${gitflow-maven-plugin.developmentBranch}</developmentBranch>
              <releaseBranchPrefix>release/</releaseBranchPrefix>
              <versionTagPrefix>v</versionTagPrefix>
              <origin>origin</origin>
            </gitFlowConfig>
            <allowSnapshots>false</allowSnapshots>
            <pushRemote>${gitflow-maven-plugin.pushRemote}</pushRemote>
            <preReleaseGoals>${gitflow-maven-plugin.preReleaseGoals}</preReleaseGoals>
            <postReleaseGoals>${gitflow-maven-plugin.postReleaseGoals}</postReleaseGoals>
            <commitMessages>
              <releaseStartMessage>Set release version to @{version}</releaseStartMessage>
              <releaseFinishMessage>Set next development snapshot version to @{version}</releaseFinishMessage>
              <tagReleaseMessage>Release tag for version @{version}</tagReleaseMessage>
            </commitMessages>
          </configuration>
        </plugin>

        <!-- Sort POM -->
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            <lineSeparator>\n</lineSeparator>
            <encoding>${project.build.sourceEncoding}</encoding>
            <sortProperties>false</sortProperties>
            <keepBlankLines>true</keepBlankLines>
            <sortDependencies>scope</sortDependencies>
            <nrOfIndentSpace>2</nrOfIndentSpace>
          </configuration>
          <executions>
            <execution>
              <id>sort</id>
              <goals>
                <goal>sort</goal>
              </goals>
              <phase>generate-sources</phase>
            </execution>
          </executions>
        </plugin>

        <!-- Copyright Headers -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${mycila-license-maven-plugin.version}</version>
          <configuration>
            <licenseSets>
              <licenseSet>
                <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                <excludes>
                  <exclude>.*/**</exclude>
                  <exclude>**/.*</exclude>
                  <exclude>**/*.adoc</exclude>
                  <exclude>**/*.bak</exclude>
                  <exclude>**/src/main/resources/**</exclude>
                  <exclude>**/src/test/resources/**</exclude>
                </excludes>
              </licenseSet>
            </licenseSets>
            <properties>
              <year>${copyright.year}</year>
              <owner>Andreas Siegel</owner>
              <email>mail@andreassiegel.de</email>
            </properties>
            <mapping>
              <java>JAVAPKG_STYLE</java>
            </mapping>
          </configuration>
          <executions>
            <execution>
              <id>copyright-header-format</id>
              <goals>
                <goal>format</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
        </plugin>

        <!-- Code Formatter using google-java-format -->
        <plugin>
          <groupId>com.spotify.fmt</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>${fmt-maven-plugin.version}</version>
          <configuration>
            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            <testSourceDirectory>${project.build.testSourceDirectory}</testSourceDirectory>
            <verbose>true</verbose>
            <filesNamePattern>.*\.java</filesNamePattern>
            <skip>false</skip>
            <skipSortingImports>false</skipSortingImports>
            <style>google</style>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Compile with Error Prone -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <release>${maven.compiler.release}</release>
            <encoding>${project.build.sourceEncoding}</encoding>
            <showWarnings>true</showWarnings>
            <compilerArgs>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
              <arg>-XDcompilePolicy=simple</arg>
              <arg>-Xplugin:ErrorProne -XepDisableWarningsInGeneratedCode</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>${error-prone.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${error-prone.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Git Flow for Release Automation -->
      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
      </plugin>

      <!-- Sort POM -->
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
      </plugin>

      <!-- Copyright Headers -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>timestamp-property</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>

      <!-- Code Formatter using google-java-format -->
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
      </plugin>

      <!-- Compile -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
